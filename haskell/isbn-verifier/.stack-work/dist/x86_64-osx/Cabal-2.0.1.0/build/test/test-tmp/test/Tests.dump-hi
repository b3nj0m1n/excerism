
==================== FINAL INTERFACE ====================
2018-01-11 22:56:33.554044 UTC

interface main:Main 8022
  interface hash: 5cc06b5f52340d63caa23ebdff40d073
  ABI hash: 34400156fc60d1b7d9a68123fbb1f186
  export-list hash: 8875844e8a53b80c9cf24d60c2bf8e65
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: ceba4ce9de875b2bad78653ef2c6ae33
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.6.0.0 QuickCheck-2.10.1
                      ansi-terminal-0.7.1.1 array-0.5.2.0 async-2.1.1.1 base-4.10.1.0
                      call-stack-0.1.0 colour-2.3.4 containers-0.5.10.2 deepseq-1.4.3.0
                      directory-1.3.0.2 filepath-1.4.1.2 ghc-boot-th-8.2.2
                      ghc-prim-0.5.1.1 hspec-2.4.4 hspec-core-2.4.4
                      hspec-expectations-0.8.2 integer-gmp-1.0.1.0 isbn-verifier-2.2.0.3
                      pretty-1.1.3.3 primitive-0.6.2.0 quickcheck-io-0.2.0 random-1.1
                      setenv-0.1.1.3 stm-2.4.4.1 template-haskell-2.12.0.0 tf-random-0.5
                      time-1.8.0.2 transformers-0.5.2.0 unix-2.7.2.2
orphans: colour-2.3.4:Data.Colour
         quickcheck-io-0.2.0:Test.QuickCheck.IO
         transformers-0.5.2.0:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         stm-2.4.4.1:Control.Monad.STM base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Complex base-4.10.1.0:Data.Either
                         base-4.10.1.0:Data.Functor.Compose base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal
                         ghc-boot-th-8.2.2:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.2.2:GHC.LanguageExtensions.Type
                         hspec-core-2.4.4:Test.Hspec.Core.Example
                         pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0:Control.Monad.Primitive
                         template-haskell-2.12.0.0:Language.Haskell.TH.Syntax
import  -/  base-4.10.1.0:Data.Foldable 9ed87455d68e87ff2b5b8725eae9897e
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  hspec-2.4.4:Test.Hspec 917f73e7880f4d00e7f96bf294ccc197
import  -/  hspec-2.4.4:Test.Hspec.Runner 76ee7a45c2f90c0efa69a5b4a82c0d59
import  -/  hspec-core-2.4.4:Test.Hspec.Core.Options bb781f7ab113f22dac5250ef654e6b99
import  -/  hspec-core-2.4.4:Test.Hspec.Core.Runner dcbaaf75cc4a7da1f1e0ae3788372a84
import  -/  hspec-core-2.4.4:Test.Hspec.Core.Spec 4371b0f2302c6aee07c9624d075941a2
import  -/  hspec-core-2.4.4:Test.Hspec.Core.Spec.Monad ab7f07f5b1a38960f1f314c9b4df6b9c
import  -/  hspec-expectations-0.8.2:Test.Hspec.Expectations 8bc0d926d5b42398a254e04604809fe4
import  -/  isbn-verifier-2.2.0.3:IsbnVerifier 1737ddf4d5cd35cd65e9027b09b9cb50
a18e4bb2f0674ee24612719199a84dab
  $tc'Case :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8197111133229858407##
                   13847006553897280588##
                   Main.$trModule
                   Main.$tc'Case2
                   0#
                   Main.$tc'Case1) -}
8f010006a57838aae2252530b9cbf5fc
  $tc'Case1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
b4f883606fd905089344438718b2c630
  $tc'Case2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Case3) -}
b70b9a2f50a01b383c0fc203a93b45f6
  $tc'Case3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Case"#) -}
fb54e6971b8cdb3d6eb813b73e5967b8
  $tcCase :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   990021888930651814##
                   4262142848388084561##
                   Main.$trModule
                   Main.$tcCase1
                   0#
                   GHC.Types.krep$*) -}
d6f1567c5e9fb74d00e1be64470ce3d3
  $tcCase1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcCase2) -}
7179be3aa9b5f07778c569f16b1ed2bf
  $tcCase2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Case"#) -}
9d72b2fddb818bcd8919052935e0f1f3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
3108ceeaf5a318be844de422b45de9d8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
33bd129667974f0a0ba4a893af79107d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
50879a499c6da0a0a9750fb9fcdf2818
  data Case
    = Case {description :: GHC.Base.String,
            input :: GHC.Base.String,
            expected :: GHC.Types.Bool}
50879a499c6da0a0a9750fb9fcdf2818
  description :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 -> ds1 }) -}
50879a499c6da0a0a9750fb9fcdf2818
  expected :: Main.Case -> GHC.Types.Bool
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 -> ds3 }) -}
50879a499c6da0a0a9750fb9fcdf2818
  input :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 -> ds2 }) -}
035d496d037bdb5c1ef0197ee7862f7e
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
65141f8bbb99688267c1cd38e902d84a
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Test.Hspec.Core.Runner.hspec2
                        Main.main159
                        Main.main2
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0] <()>_N) <()>_N)))
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.exitFailure1 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
49bd75c07109522153d0beed710d8ee4
  main10 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main106
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main11) -}
7b2c41d989469f8e2016a1b3f3dca574
  main100 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main101) -}
ffee5fe5fbb1866ee7eeb1eede62ccc1
  main101 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("3598215088"#) -}
5ea2e7723dd40d933c8ea0b6d0664a95
  main102 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main105
                   Main.main103) -}
38c995faee95b4a76e13fb50ef9fad59
  main103 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main104) -}
9a79ce9fe41d0498d27a7463e9c7f5ba
  main104 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("alid isbn without separating dashes"#) -}
22e56e6178969a9414f0aff68fd8c710
  main105 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'v'#) -}
a4019bf04ce898e5de1a4cad0aa85a2c
  main106 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main107
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
ca3c63adcfa8f75fa5af89f811ef7a8e
  main107 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main108) -}
066501e7c13df46cc3c86e646a93221e
  main108 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main113
                   Main.main23
                   GHC.Types.False
                   Main.main109
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
a505cc80938ac68893ff8a7b1e7b49a6
  main109 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main110 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
32cf54cce38469afe17e37c854fe04b8
  main11 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main94
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main12) -}
55589029897ccf0d9be380cc7c40bbe0
  main110 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case IsbnVerifier.isbn Main.main111 of wild {
                   GHC.Types.False -> (# eta2, GHC.Tuple.() #)
                   GHC.Types.True -> Main.main22 eta2 }) -}
620df8c06f86e8fa566721469503ed31
  main111 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main112) -}
03dfd1249aad075cf06e163cd5a1064c
  main112 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("3-598-2K507-0"#) -}
56db24ca3ac798b11db001278fe069fe
  main113 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main73
                   Main.main114) -}
957d07b03c09daa0b0c293a5af197dfe
  main114 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main115) -}
b33daf987d9edb61b768cc34604bdc4c
  main115 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("nvalid character in isbn"#) -}
56bda31640c53033a20673d36c31b00e
  main116 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main117
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
c96e939b5f8b038d525001f2c0bcb3d3
  main117 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main118) -}
70baeb0b686e985704f03986e33a3b16
  main118 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main123
                   Main.main23
                   GHC.Types.False
                   Main.main119
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
086b2cb4bf7d9a2201cc92f7e41c72b2
  main119 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main120 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
11d548b9663d4fab560555855242f203
  main12 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main84
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main13) -}
a9318baf9436757d0d5ba5154d1ee294
  main120 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case IsbnVerifier.isbn Main.main121 of wild {
                   GHC.Types.False -> (# eta2, GHC.Tuple.() #)
                   GHC.Types.True -> Main.main22 eta2 }) -}
1c62c1fc8220b18e5d2356629ac5f313
  main121 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main122) -}
cbc8d37c82d60f9187ca7708be5cd4f7
  main122 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("3-598-21507-A"#) -}
8dd8b6d90fff617f4754b915ea12e26f
  main123 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main51
                   Main.main124) -}
4dd59336dde55e48e252e3422c0a4288
  main124 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main125) -}
f879742dfbbd06bd6ab1891d15130d50
  main125 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("heck digit is a character other than X"#) -}
d6497f139693a5fe59ec31a0e631fe52
  main126 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main127
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
f5a45d2fb395f3fff9c2b7fbb0030529
  main127 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main128) -}
8aa42a8aa2087a2532f661e115350e61
  main128 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main133
                   Main.main23
                   GHC.Types.False
                   Main.main129
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
62e7e0a3d105477bf5840e7c44b714dd
  main129 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main130 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
d58fe8ea6e62df245be9f10e18d30133
  main13 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main74
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main14) -}
d4d59e018812f991d111b367209df1ba
  main130 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case IsbnVerifier.isbn Main.main131 of wild {
                   GHC.Types.False -> Main.main99 eta2
                   GHC.Types.True -> (# eta2, GHC.Tuple.() #) }) -}
dc58d428f8d66cd2fca235c82de85970
  main131 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main132) -}
711cc237954d92b9a6a6e2cdcd9097a0
  main132 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("3-598-21507-X"#) -}
a7e8d72fb0a44835ccb8313a16c1fbe7
  main133 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main105
                   Main.main134) -}
fab20acc1c701d92e26153891d023bb9
  main134 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main135) -}
503e00c18f00fc0835e9519b19b91e04
  main135 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("alid isbn number with a check digit of 10"#) -}
f259aa2b2bd79e4002039265969bd74c
  main136 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main137
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
191dc68ce4894b6794594973b591607f
  main137 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main138) -}
1e6ce2c5e4cb584e5cc627f48040892b
  main138 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main143
                   Main.main23
                   GHC.Types.False
                   Main.main139
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
8227f8aa665c1d4ca46007728461a02b
  main139 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main140 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
712b14909d9b13d850d04b5476ca6acf
  main14 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main63
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main15) -}
3c92fe2d1836d21507402dfb33f4458a
  main140 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case IsbnVerifier.isbn Main.main141 of wild {
                   GHC.Types.False -> (# eta2, GHC.Tuple.() #)
                   GHC.Types.True -> Main.main22 eta2 }) -}
22bf896c561c8a072df8c1aeb8639d67
  main141 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main142) -}
2810365aab0bfc2b40198e5e33f45d7f
  main142 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("3-598-21508-9"#) -}
371c630da59cc9065ae7da0e0aec02c7
  main143 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main73
                   Main.main144) -}
88d3b9f7f534b73f83d5deb914abe53d
  main144 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main145) -}
a71c0878550974bfe361739433ffb214
  main145 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("nvalid isbn check digit"#) -}
f34fcc113c78a0c122b77095207178b5
  main146 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main147
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
a04b77acdecf5305b94da3732a9a798e
  main147 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main148) -}
23a042f1cee679d534d0eb042b3cebf9
  main148 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main153
                   Main.main23
                   GHC.Types.False
                   Main.main149
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
4bf1d899a4fbec2a0f8514694686a199
  main149 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main150 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
09838eb5db9293479c1f0aefac88a904
  main15 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main52
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main16) -}
1dfa16c082096ad27a105e7ac1eb30a3
  main150 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case IsbnVerifier.isbn Main.main151 of wild {
                   GHC.Types.False -> Main.main99 eta2
                   GHC.Types.True -> (# eta2, GHC.Tuple.() #) }) -}
801432e4e9640daad7ab356d31599594
  main151 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main152) -}
bb86f9ed83a6690057092f3e57d491b4
  main152 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("3-598-21508-8"#) -}
f8ab9983cc2263c025fc57c4a71865f9
  main153 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main105
                   Main.main154) -}
01bba46f8705c0e809b6b904f434bca2
  main154 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main155) -}
549e9d8ba84aaaaaa8748e4e8189bc4f
  main155 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("alid isbn number"#) -}
b2cb1a7adfbdb2cbb2efb2dfc06a2046
  main156 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main73
                   Main.main157) -}
67a459172bc561f877227eba1e56275f
  main157 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main158) -}
fffe2020f1ea1f5a76c84daccaed7a18
  main158 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("sbn"#) -}
0bae0e594db145a43b709974ca9ba832
  main159 :: Test.Hspec.Core.Options.Config
  {- Unfolding: (Test.Hspec.Core.Options.Config
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.True
                   (GHC.Base.Nothing @ GHC.IO.FilePath)
                   GHC.Types.False
                   GHC.Types.False
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ GHC.Integer.Type.Integer)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Test.Hspec.Core.Example.defaultParams1
                   Test.Hspec.Core.Options.ColorAuto
                   GHC.Types.True
                   (GHC.Base.Nothing @ Test.Hspec.Core.Formatters.Monad.Formatter)
                   GHC.Types.False
                   Test.Hspec.Core.Options.defaultConfig1
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
680eae1ff4546fe96aa6a3f2c670d7cb
  main16 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main41
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main17
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))) -}
975acaf6df183acd3252a7f5f9def766
  main160 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
0e1af907e9ae537f03016764490debab
  main17 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main18
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
b80d9d335fcdf7d6b7feb6f6962a1884
  main18 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main19) -}
fb9db11e65d151480f7ea5e65d81fc96
  main19 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main37
                   Main.main23
                   GHC.Types.False
                   Main.main20
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
f1ec484c2b7cf3e9fb249138fb469533
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           [Test.Hspec.Core.Tree.Tree
              (Test.Hspec.Core.Example.ActionWith ())
              (Test.Hspec.Core.Tree.Item ())]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# eta, Main.main3 #)) -}
c0f67237689193311c8b4ae182116748
  main20 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main21 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
448f6b1b51ecdd9c9fd720b1b3fef7c3
  main21 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case IsbnVerifier.isbn (GHC.Types.[] @ GHC.Types.Char) of wild {
                   GHC.Types.False -> (# eta2, GHC.Tuple.() #)
                   GHC.Types.True -> Main.main22 eta2 }) -}
df40a7a7951d6f126fb966dc425fbdf4
  main22 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <B,U>x -}
5fa0ee950980adc414b6e953b120b41a
  main23 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (Test.Hspec.Core.Tree.specItem13 Main.main24) -}
6ed97e6033782a127ca80e61bc9222e9
  main24 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem11
                   Test.Hspec.Core.Tree.specItem3
                   Main.main25) -}
fbd8951abeaa6bd64655a10fe13dc591
  main25 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it1
                   Main.main26) -}
474ad97025014959586991ad3185eef9
  main26 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main35
                   Main.main27
                   GHC.Stack.Types.EmptyCallStack) -}
9904239106e29ec6cebe6741dffbdb24
  main27 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main34
                   Main.main33
                   Main.main31
                   Main.main30
                   Main.main29
                   Main.main30
                   Main.main28) -}
b9c7db39779d3f8b826807254d2179a8
  main28 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 45#) -}
db7f5a820ed8f86de6419c41ca334f73
  main29 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 21#) -}
34b6224c2d47c35b76212f5f9669e5cc
  main3 ::
    ((),
     [Test.Hspec.Core.Tree.Tree
        (Test.Hspec.Core.Example.ActionWith ())
        (Test.Hspec.Core.Tree.Item ())])
  {- Strictness: m, Unfolding: ((GHC.Tuple.(), Main.main4)) -}
5c342eef6943aff8a9b296516aeb808a
  main30 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 16#) -}
fea001b2115fdd4de40fa7eb24ea420f
  main31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main32) -}
8546b2676e5a85cae5412112d3e20afe
  main32 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("test/Tests.hs"#) -}
344721a7592877f8a9a4e5da0044af85
  main33 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule2) -}
c7493efc6009747fa73c621842eb3166
  main34 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule4) -}
649cb1be45a27b1f95358d52e03077ba
  main35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main36) -}
4771473ebe3d2356719d87345b584af1
  main36 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("it"#) -}
180c6b9de7c3a2d6939b04666a6c7435
  main37 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main40
                   Main.main38) -}
bef5122faaa858b540b7911cf1e4cb1e
  main38 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main39) -}
61c75ac89f1fadb9214ab88c3009e624
  main39 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("mpty isbn"#) -}
3bcfa1318078fde727854c53bccc9cdf
  main4 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main5
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.Tree
                           (Test.Hspec.Core.Example.ActionWith ())
                           (Test.Hspec.Core.Tree.Item ())))) -}
766b9e3458ad88ec9881566d090dd7fd
  main40 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'e'#) -}
fb0d807c0d603cbacf5f0dd28b25017a
  main41 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main42
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
ee31989e4c290dfc8b5f2142ea9bf0dc
  main42 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main43) -}
480e48f8390444fb128df80405148859
  main43 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main48
                   Main.main23
                   GHC.Types.False
                   Main.main44
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
485557563d6b6551ef36f1e35822230a
  main44 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main45 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
8366cd7e1335be2bbb5de8b83a194a70
  main45 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case IsbnVerifier.isbn Main.main46 of wild {
                   GHC.Types.False -> (# eta2, GHC.Tuple.() #)
                   GHC.Types.True -> Main.main22 eta2 }) -}
4013a6e1a5f4baddc711f5ff09411c20
  main46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main47) -}
7699b1d8e032389354b6809840345dcc
  main47 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("3-598-21515-X"#) -}
474e55ec38650453508aa3e0f4f2dd0b
  main48 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main51
                   Main.main49) -}
d8723d3b9991550095cd198798257fce
  main49 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main50) -}
77bcd47e90a14161884f453ce1d1a1e8
  main5 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Strictness: m1,
     Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Main.main156
                   Main.main6) -}
63abd2f274db5a19b2557547bcae89e4
  main50 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("heck digit of X should not be used for 0"#) -}
e7d58da45f9a362e805baae6475f95cd
  main51 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'c'#) -}
e484cd268c3ca96ce7ea5d40bc6de430
  main52 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main53
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
69ed6f70faedaa0ab4171d875a57d9ec
  main53 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main54) -}
f8b2ff79208ed4492a0f80c1755c1a2e
  main54 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main59
                   Main.main23
                   GHC.Types.False
                   Main.main55
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
785f454b1c53742f8c7229a542942be4
  main55 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main56 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
82b7105107038d0dda8f0fc3a323513d
  main56 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case IsbnVerifier.isbn Main.main57 of wild {
                   GHC.Types.False -> (# eta2, GHC.Tuple.() #)
                   GHC.Types.True -> Main.main22 eta2 }) -}
72efe9cebb6992999c3830f85989611e
  main57 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main58) -}
aaac63ba3193ba1582de2b7832ac552d
  main58 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("3-598-21507-XX"#) -}
a433a60d938dbf592d57cb65e4bc455a
  main59 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main62
                   Main.main60) -}
cd228c98a4ae5e79828651f2cc532ada
  main6 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main146
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main7) -}
c256916a4793b19c33a7a052bf64e58a
  main60 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main61) -}
4be5e9acef3f770ce5a1859ea9b51d36
  main61 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("oo long isbn"#) -}
46c23751e20cf775a53dd74ff684210d
  main62 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 't'#) -}
572073a7d1425fb1a1dc4c923b0fb1ae
  main63 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main64
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
a49024e32351ecbad9b2771d567224cb
  main64 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main65) -}
467783c4be23bec20581a4a832e5f794
  main65 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main70
                   Main.main23
                   GHC.Types.False
                   Main.main66
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
d1ced3d84f6e5623d9eb20f2b4dc5c1d
  main66 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main67 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
347f808e2621acf1e1a3f418a14cdecc
  main67 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case IsbnVerifier.isbn Main.main68 of wild {
                   GHC.Types.False -> (# eta2, GHC.Tuple.() #)
                   GHC.Types.True -> Main.main22 eta2 }) -}
bccef2c0ee7305a7edaadf97f4883780
  main68 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main69) -}
0033b3fda4a36c2ff5c8a82d05a6fc71
  main69 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("3-598-21507"#) -}
655a7ffd18915e2233d983154032273e
  main7 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main136
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main8) -}
ceb66fdd9b8e0ae701e5c5310dd34727
  main70 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main73
                   Main.main71) -}
fc67831605a023be423294f95c0dc7d2
  main71 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main72) -}
6ff245174366b0f98d27be2d55b98b65
  main72 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("sbn without check digit"#) -}
8f7c89be3a3be284eb5c3004eda59351
  main73 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'i'#) -}
5ee24cb260b2b5c8fb8da8f16bf5f3ca
  main74 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main75
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
88e6f8199bd45a0a9556ef876d8fa708
  main75 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main76) -}
5eb16bc12a614d847370bb31d54d3c1d
  main76 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main81
                   Main.main23
                   GHC.Types.False
                   Main.main77
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
99652b4b7436c894bfc5e63f5e6c2f32
  main77 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main78 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
9eaa00f8f7539f7a259416f09fbdba41
  main78 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case IsbnVerifier.isbn Main.main79 of wild {
                   GHC.Types.False -> (# eta2, GHC.Tuple.() #)
                   GHC.Types.True -> Main.main22 eta2 }) -}
7766e9822ee917959d5ae63719e5b0e4
  main79 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main80) -}
b2fadcee6feeef02fd51a992e4b7b1c3
  main8 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main126
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main9) -}
13d88268ce5b1491a068142d3e552cf1
  main80 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("3598215078X"#) -}
fa31295df40bcb623c353a868d9b5965
  main81 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main62
                   Main.main82) -}
d55b297c1579acdb445ce8f9e1450c3f
  main82 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main83) -}
dddd2a2546cc6e543c40ce5ba34cbcad
  main83 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("oo long isbn and no dashes"#) -}
73bbadb262653051ea70d5e57bd01a27
  main84 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main85
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
533ed412a9e5c583b91ef2ddc1aa79de
  main85 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main86) -}
15c97ec0fdcbcf6cd1bb46d7904614aa
  main86 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main91
                   Main.main23
                   GHC.Types.False
                   Main.main87
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
15469ea543166eff7084301d408ab5ae
  main87 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main88 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
edd6f72e7f60362dacb8178ed00b84f2
  main88 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case IsbnVerifier.isbn Main.main89 of wild {
                   GHC.Types.False -> (# eta2, GHC.Tuple.() #)
                   GHC.Types.True -> Main.main22 eta2 }) -}
241d32f182bf1a70037b88968ec1225a
  main89 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main90) -}
3a796c0c1a4443722dd364773f6c4e73
  main9 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main116
                     `cast`
                   (Nth:1
                        (Nth:3
                             (Nth:3
                                  (Trans
                                       (Sym (GHC.Types.N:IO[0]
                                                 <((),
                                                   [Test.Hspec.Core.Tree.SpecTree
                                                      (Test.Hspec.Core.Example.Arg
                                                         Test.Hspec.Expectations.Expectation)])>_R))
                                       (Trans
                                            (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree
                                                          (Test.Hspec.Core.Example.Arg
                                                             Test.Hspec.Expectations.Expectation)]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                                            (Trans
                                                 (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                           (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0]))) <()>_N)
                                                 (Trans
                                                      (Nth:2
                                                           (Trans
                                                                (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                     <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N
                                                                 ->_R Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N <()>_N)
                                                                (<Control.Monad.Trans.Writer.Lazy.WriterT
                                                                    [Test.Hspec.Core.Tree.SpecTree
                                                                       ()]
                                                                    GHC.Types.IO
                                                                    ()>_R
                                                                 ->_R <Control.Monad.Trans.Writer.Lazy.WriterT
                                                                         [Test.Hspec.Core.Tree.SpecTree
                                                                            ()]
                                                                         GHC.Types.IO
                                                                         ()>_R
                                                                 ->_R Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                          <[Test.Hspec.Core.Tree.SpecTree
                                                                              ()]>_N
                                                                          <GHC.Types.IO>_R
                                                                          <()>_N)))
                                                      (Trans
                                                           (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                    ()]>_N
                                                                <GHC.Types.IO>_R
                                                                <()>_N)
                                                           (GHC.Types.N:IO[0]
                                                                <((),
                                                                  [Test.Hspec.Core.Tree.SpecTree
                                                                     ()])>_R)))))))))
                   Main.main10) -}
03fd15075d7894a085b06380b2e00a75
  main90 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("359821507"#) -}
aebcece754d9055c0ef2269dbdec2c9b
  main91 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main73
                   Main.main92) -}
aa8d5241014e451636014e34841f95bf
  main92 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main93) -}
d8f0682286684f3607f701ad76715086
  main93 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("sbn without separating dashes and X as check digit"#) -}
571c6273cadec3f1dfdccd2121020dee
  main94 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main95
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
2d39a6c83f12911ffaa0b4086a51ef47
  main95 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main96) -}
4b78f201c9ba25ba89da07b6521c0944
  main96 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main102
                   Main.main23
                   GHC.Types.False
                   Main.main97
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
436f2949b474b214e1f57e5be8780c6d
  main97 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R <(Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation
                                -> GHC.Types.IO ())
                               -> GHC.Types.IO ()>_R
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Main.main98 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
8f6857be40ed71eb2f3b3bad574cad24
  main98 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case IsbnVerifier.isbn Main.main100 of wild {
                   GHC.Types.False -> Main.main99 eta2
                   GHC.Types.True -> (# eta2, GHC.Tuple.() #) }) -}
077f4d6105b8055e6d8053c6d20d5364
  main99 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <B,U>x -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

