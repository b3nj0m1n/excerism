
==================== FINAL INTERFACE ====================
2018-01-22 21:05:08.875144 UTC

interface bob-1.2.0.5-41cfZtqo8NrIe4DcDwBya:Bob 8022
  interface hash: e16b03c92fc2f39ede54776ee8d12126
  ABI hash: 7ba3ad7b874cd07de36a523c8604c245
  export-list hash: 89b87cbbcf8aba598c8c607dbb48b880
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 0451a77cc0d8e5d99d548d6441c7dd35
  sig of: Nothing
  used TH splices: False
  where
exports:
  Bob.responseFor
module dependencies:
package dependencies: base-4.10.1.0* ghc-prim-0.5.1.1
                      integer-gmp-1.0.1.0
orphans: base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Type.Equality base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
8499ced5ff47c4bb4a4b8e5568009198
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Bob.$trModule3 Bob.$trModule1) -}
3b8a871aede90484d98051a334365b51
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Bob.$trModule2) -}
5705f6a386d16834b32c2d8d64d6df85
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Bob"#) -}
1c7c55d1fd7081532c5dc3f5f937e3c8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Bob.$trModule4) -}
7300e24ac812da851d60abb8e8710cc7
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("bob-1.2.0.5-41cfZtqo8NrIe4DcDwBya"#) -}
42c2cafbcd74d86fcf65a1021c32cc0a
  responseFor :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [GHC.Types.Char]) ->
                 case ds of wild {
                   [] -> Bob.responseFor11
                   : ipv ipv1
                   -> case GHC.Base.eqString wild Bob.responseFor9 of wild1 {
                        GHC.Types.False
                        -> case GHC.Base.eqString wild Bob.responseFor7 of wild2 {
                             GHC.Types.False -> Bob.responseFor5
                             GHC.Types.True -> Bob.responseFor3 }
                        GHC.Types.True -> Bob.responseFor1 } }) -}
5396449fd0bbf2cf4d4fa5da2f2c2cc0
  responseFor1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Bob.responseFor2) -}
436895b98e4917b9863d4fea37a0a44d
  responseFor10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SHOUT"#) -}
f3c2dfd3b2aa509598de5a61b92d9384
  responseFor11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Bob.responseFor12) -}
8a0177a144b830311b71abcb1316d154
  responseFor12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Fine. Be that way!"#) -}
4fff51814f40d3a02febc2f0ea172ccf
  responseFor2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Whoa, chill out!"#) -}
dd48ee81d7be81aedd200332b16171af
  responseFor3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Bob.responseFor4) -}
afd488bed77ffab8c101398e2a52f42b
  responseFor4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Calm down, I know what I'm doing!"#) -}
9b056ca7d4095bc7c26ef6512a7db295
  responseFor5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Bob.responseFor6) -}
5f2413fd84d6150769f45657253651cc
  responseFor6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Whatever."#) -}
20624af3eadefaed4a61b51eb26f16fb
  responseFor7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Bob.responseFor8) -}
2e26cc8a2224eef01a274e8258b8af97
  responseFor8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SHOUT QUESTION"#) -}
612943bc2944e2509babc1e4c0a76c0b
  responseFor9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Bob.responseFor10) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

