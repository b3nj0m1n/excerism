
==================== FINAL INTERFACE ====================
2018-01-18 05:10:20.520624 UTC

interface rail-fence-cipher-1.0.1.2-HlyxhdlAAKQ9RYMVutvs8m:RailFenceCipher 8022
  interface hash: 8698eba18f8ca2dedec3dbeae7002cb1
  ABI hash: ea866b3bc565d148becb3bce6e4eae33
  export-list hash: d4ad91190c384e8e4b7ce1bec2cb2d83
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 0451a77cc0d8e5d99d548d6441c7dd35
  sig of: Nothing
  used TH splices: False
  where
exports:
  RailFenceCipher.decode
  RailFenceCipher.encode
module dependencies:
package dependencies: base-4.10.1.0* ghc-prim-0.5.1.1
                      integer-gmp-1.0.1.0
orphans: base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Type.Equality base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
ab880a6656aaf8fa4eda61a7c9e033c6
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   RailFenceCipher.$trModule3
                   RailFenceCipher.$trModule1) -}
80e79205479df51fe5f4a2b255bfd9c8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS RailFenceCipher.$trModule2) -}
7aa5528419690b8e7250ba99668d40b3
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RailFenceCipher"#) -}
e1b3c4ad55e746ef690b67dafa2e8881
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS RailFenceCipher.$trModule4) -}
8730085d3b9af25ad6cfb16102d5f8ce
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("rail-fence-cipher-1.0.1.2-HlyxhdlAAKQ9RYMVutvs8m"#) -}
a240cd535b6c6cc8a6ba1c47b685d8b1
  decode :: GHC.Types.Int -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ (a :: GHC.Types.Int) (b :: GHC.Base.String) ->
                 RailFenceCipher.decode1) -}
7ed5ff579ac07a850b0ede8bb910f850
  decode1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   RailFenceCipher.decode2) -}
1a31f713aceea800684250fcf9ed2cce
  decode2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("You need to implement this function!"#) -}
32785ef29e45e5ae108cca37af199028
  encode :: GHC.Types.Int -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (2, True, True)
                (\ (size :: GHC.Types.Int) (decoded :: GHC.Base.String) ->
                 decoded) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

